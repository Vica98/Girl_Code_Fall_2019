Source: https://projects.raspberrypi.org/en/projects/the-big-minecraft-piano


For this project to work:
sudo apt update
sudo apt install python3-pip
sudo pip3 install python-osc

Sonic Pi
live_loop :listen do
  use_real_time
  note = sync "/osc/play_this"
  play note[0] 
end

open Python 3 IDLE

from pythonosc import osc_message_builder
from pythonosc import udp_client
from time import sleep
sender = udp_client.SimpleUDPClient('127.0.0.1', 4559)

save with CTRL + s + F5

then run in shell
sender.send_message('/play_this', 60)

add in Python 3 IDLE
def play_note(note):
    '''Take an integer note value and send it to Sonic Pi'''
    sender.send_message('/play_this', note)
    sleep(0.5)
    
 then run in shell
 play_note(60)
 play_note(62)
 
Then, start minecraft game

add in Python 3 IDLE
from pythonosc import osc_message_builder
from pythonosc import udp_client
from mcpi.minecraft import Minecraft
from time import sleep

sender = udp_client.SimpleUDPClient('127.0.0.1', 4559)
mc = Minecraft.create()

player_x, player_y, player_z  = mc.player.getTilePos()

add in Python 3 IDLE
then add to clear space
def bulldozer(x, y, z):
    mc.setBlocks(x - 30, y - 3, z - 30, x + 30, y + 20, z + 30, 0)


then run in shell
bulldozer(player_x, player_y, player_z)

add in Python 3 IDLE
def black_key(x, y, z):
    mc.setBlocks(x, y - 1, z, x + 1, y - 1, z + 8, 49)


then run in shell
>>> black_key(player_x, player_y, player_z)


add in Python 3 IDLE
def white_key(x, y, z):
    mc.setBlocks(x, y - 1, z, x + 2, y - 1, z + 14, 44, 7)

then run in shell
>>> white_key(player_x, player_y, player_z)


FOR LOOPS?
in new file
for i in range(19):
    print(i, end = ',')
    
for i in range(0, 19, 3):
    print(i, end = ',')


add in Python 3 IDLE
def make_octave(x, y, z):
    for i in range(0, 19, 3):
        white_key(player_x + i, player_y, player_z)
    for i in range(2, 18, 3):
        black_key(player_x + i, player_y, player_z) 

edit in python 3 idle
def make_octave():
    for i in range(0, 19, 3):
        white_key(player_x + i, player_y, player_z)
    for i in range(2, 18, 3):
        if i != 8:	## leave a space as only 5 black keys
            black_key(player_x + i, player_y, player_z)

at the end of python 3 idle
bulldozer(player_x, player_y, player_z)
make_octave(player_x, player_y, player_z)
mc.player.setPos(player_x + 8, player_y + 3, player_z + 12)
 
 
add in Python 3 IDLE
while True:
    new_x, new_y, new_z = mc.player.getTilePos()
    
    
add in while loop
block_below = mc.getBlock(new_x, new_y - 1, new_z)
if block_below != 44 and block_below != 49:
    block_below = mc.getBlock(new_x, new_y, new_z)
    
relative_position = player_x - new_x ## find the position on the piano


add in Python 3 IDLE
white_notes = [60, 62, 64, 65, 67, 69, 71]
black_notes = [61, 63, 0,  66, 68, 70]


add in while loop
if block_below == 44:
    notes_along = relative_position // -3
    play_note(white_notes[notes_along])
if block_below == 49:
    notes_along = ((relative_position - 1) // -3) - 1
    play_note(black_notes[notes_along])
    
   

